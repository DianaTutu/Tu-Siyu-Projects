package Interface;


import Business.PersonPackage.Person;
import Factory.AbstractPeopleAbstractAPI;
import Factory.TeacherFactory;
import Factory.StudentFactory;

import Business.ServicePackage.Immune;
import Business.ServicePackage.ImuDirectory;
import Business.PersonPackage.Student;
import Business.PersonPackage.Teacher;
import Business.StartBusiness;
import java.awt.CardLayout;
import java.awt.Image;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author tusiyu
 */
public class Main extends javax.swing.JFrame {

    /**
     * Creates new form Main2
     */
    private StartBusiness start;
    //private String date;
    //private StudentDirectory studentDir;
    //private String birthDay;
    private ArrayList<String> VaccineList;
    private Date now;

    public Main() throws Exception {
        start = new StartBusiness();
        //studentDir = new StudentDirectory();
        VaccineList = new ArrayList<String>();
        initComponents();
        //setSize(500,600);//e.g
        now = start.getNow();
        read();
        readTeacher();
        
        ImageIcon icon = new ImageIcon("/Users/Shared/NetBeansProjects/DayCare/src/Interface/depositphotos_18305633-stock-illustration-easter-vintage-card-illustration-of.jpg");
        icon.setImage(icon.getImage().getScaledInstance(230, 230,Image.SCALE_DEFAULT));
        image.setIcon(icon);
        //date = nowField.getText();

        //date = "2000/01/01";
        //now = parse(date);
        //read();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     *
     * @throws java.text.ParseException
     */
    @SuppressWarnings("unchecked")

    public void readTeacher(){            
        try{    
        BufferedReader inLine = new BufferedReader(new FileReader("Teacher.txt"));
            String inputLine = null;
            while ((inputLine= inLine.readLine())!= null) {
            String[] teacherData= inputLine.split(",");
            AbstractPeopleAbstractAPI tf = new TeacherFactory();
            Teacher teacher = (Teacher) tf.getPerson();
            String teachername = teacherData[0];
            int min = Integer.parseInt(teacherData[1]);
            int max =  Integer.parseInt(teacherData[2]);
            String group = teacherData[3];
            String classr = teacherData[4];
            int max_s =  Integer.parseInt(teacherData[5]);
            
            teacher.setFirstname(teachername);
            teacher.setMin_age(min);              
            teacher.setMax_age(max);
            teacher.setGroup(group);
            teacher.setClaseroom(classr);
            teacher.setMax_s(max_s);
            }}
        catch(ArrayIndexOutOfBoundsException e){
            
        }
        catch(FileNotFoundException e){
            
        }
        catch(IOException e){
            
        }
    }
        
    public void read() throws ParseException {
        try (BufferedReader inLine = new BufferedReader(new FileReader("Students.txt"));) {
            String inputLine = null;
            while ((inputLine= inLine.readLine())!= null) {
                String[] studentData = inputLine.split(",");
                AbstractPeopleAbstractAPI pf = new StudentFactory();
                Student student = (Student) pf.getPerson();
                String firstName = studentData[0];
                String lastName = studentData[1];
                String id = studentData[2];
                String birthday = studentData[3];
                String regDate = studentData[4];
                String mom = studentData[5];
                String dad = studentData[6];
                
                student.setFirstname(firstName);
                student.setLastname(lastName);
                student.setId(Integer.parseInt(id));
                student.setBirthday(birthday);
                student.setRegisterDate(regDate);
                student.setMotherName(mom);
                student.setFatherName(dad);
                
                student.setImuDir(readImu(inputLine));// move this function to student class
                
                student.setAge(now,birthday);
                System.out.println();
            }
        } catch (FileNotFoundException ex) {
            JOptionPane.showMessageDialog(null, "File does not exist");
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Error");
        }
    }

    public ImuDirectory readImu(String inputLine) {
        ImuDirectory Result = new ImuDirectory();
        String[] StudentData = inputLine.split(",");
        int num = (StudentData.length - 7) / 5;
        for (int i = 0; i < num; i++) {

            Immune imu = new Immune();
            String name = StudentData[7 + i * 5];
            imu.setName(name);
            addVaccineList(name);

            int period = Integer.valueOf(StudentData[8 + i * 5]);
            imu.setInterval(period);

            int times = Integer.valueOf(StudentData[9 + i * 5]);
            imu.setInoculationTImes(times);

            try {
                Date Dateofinoculation = parse(StudentData[10 + i * 5]);
                imu.setDateofinoculation(Dateofinoculation);
            } catch (ParseException e) {

            }

            int NumberofInoculationtimes = Integer.valueOf(StudentData[11 + i * 5]);
            imu.setNumberofInoculationtimes(NumberofInoculationtimes);

            Result.getImmuDir().add(imu);
        }

        return Result;
    }

    public void addVaccineList(String type) {
        int n = 0;
        for (String s : VaccineList) {
            if (s.equals(type)) {
                n++;
            }
        }
        
        if (n == 0) {
            VaccineList.add(type);
        }
    }

    public Date parse(String date) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/DD");
        return sdf.parse(date);
    }

    public void initClassroom(){
        //start.
    }
    /*
    public Date parser(String birthDay) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/DD");
        return sdf.parse(birthDay);
    }
*/
    
/*    
    public static int getMonthDiff(Date now, Date birth) {
        Calendar c1 = Calendar.getInstance();
        Calendar c2 = Calendar.getInstance();
        c1.setTime(now);
        c2.setTime(birth);
        if (c1.getTimeInMillis() < c2.getTimeInMillis()) {
            return 0;
        }
        int year1 = c1.get(Calendar.YEAR);
        int year2 = c2.get(Calendar.YEAR);
        int month1 = c1.get(Calendar.MONTH);
        int month2 = c2.get(Calendar.MONTH);
        int day1 = c1.get(Calendar.DAY_OF_MONTH);
        int day2 = c2.get(Calendar.DAY_OF_MONTH);
        int yearInterval = year1 - year2;
        if (month1 < month2 || month1 == month2 && day1 < day2) {
            yearInterval--;
        }
        int monthInterval = (month1 + 12) - month2;
        if (day1 < day2) {
            monthInterval--;
        }
        monthInterval %= 12;
        int age = yearInterval * 12 + monthInterval;
        return age;
    }
*/

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jSplitPane1 = new javax.swing.JSplitPane();
        CardPanel = new javax.swing.JPanel();
        rightPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        image = new javax.swing.JLabel();
        leftPanel = new javax.swing.JPanel();
        Panel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        Panel2 = new javax.swing.JPanel();
        mBtn = new javax.swing.JButton();
        aBtn = new javax.swing.JButton();
        sBtn = new javax.swing.JButton();
        vBtn = new javax.swing.JButton();
        btnSetting = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        CardPanel.setLayout(new java.awt.CardLayout());

        jLabel1.setFont(new java.awt.Font("Zapfino", 0, 35)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Welcome");

        jLabel2.setFont(new java.awt.Font("Zapfino", 1, 88)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Daycare");

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Interface/depositphotos_18305633-stock-illustration-easter-vintage-card-illustration-of.jpg"))); // NOI18N

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGap(148, 148, 148)
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 507, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(877, Short.MAX_VALUE))
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel2))
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(477, Short.MAX_VALUE))
        );

        CardPanel.add(rightPanel, "card2");

        jSplitPane1.setRightComponent(CardPanel);

        leftPanel.setLayout(new java.awt.CardLayout());

        jButton1.setText("Start");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel1Layout = new javax.swing.GroupLayout(Panel1);
        Panel1.setLayout(Panel1Layout);
        Panel1Layout.setHorizontalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(47, Short.MAX_VALUE))
        );
        Panel1Layout.setVerticalGroup(
            Panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel1Layout.createSequentialGroup()
                .addGap(177, 177, 177)
                .addComponent(jButton1)
                .addContainerGap(963, Short.MAX_VALUE))
        );

        leftPanel.add(Panel1, "card8");

        mBtn.setText("Manage");
        mBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mBtnActionPerformed(evt);
            }
        });

        aBtn.setText("Alert");
        aBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aBtnActionPerformed(evt);
            }
        });

        sBtn.setText("Search");
        sBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sBtnActionPerformed(evt);
            }
        });

        vBtn.setText("View All Students");
        vBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vBtnActionPerformed(evt);
            }
        });

        btnSetting.setText("Setting");
        btnSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSettingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel2Layout = new javax.swing.GroupLayout(Panel2);
        Panel2.setLayout(Panel2Layout);
        Panel2Layout.setHorizontalGroup(
            Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel2Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnSetting)
                    .addComponent(mBtn)
                    .addComponent(sBtn)
                    .addComponent(aBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(vBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );
        Panel2Layout.setVerticalGroup(
            Panel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel2Layout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(mBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(vBtn)
                .addGap(17, 17, 17)
                .addComponent(sBtn)
                .addGap(18, 18, 18)
                .addComponent(aBtn)
                .addGap(26, 26, 26)
                .addComponent(btnSetting)
                .addContainerGap(894, Short.MAX_VALUE))
        );

        leftPanel.add(Panel2, "card7");

        jSplitPane1.setLeftComponent(leftPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSplitPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mBtnActionPerformed
        // TODO add your handling code here:
        ManagePanel panel = new ManagePanel(CardPanel, start);
        CardPanel.add("ManagePanel", panel);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.next(CardPanel);

    }//GEN-LAST:event_mBtnActionPerformed

    private void aBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aBtnActionPerformed
        // TODO add your handling code here:
        OptionPanel panel = new OptionPanel(CardPanel, VaccineList, start, now);
        CardPanel.add("OptionPanel", panel);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.next(CardPanel);
    }//GEN-LAST:event_aBtnActionPerformed

    private void sBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sBtnActionPerformed
        // TODO add your handling code here:
        SearchPanel panel = new SearchPanel(CardPanel, start);
        CardPanel.add("SearchPanel", panel);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.next(CardPanel);

    }//GEN-LAST:event_sBtnActionPerformed

    private void vBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vBtnActionPerformed

        StudentsListPanel panel = new StudentsListPanel(CardPanel, start);
        CardPanel.add("StudentsListPanel", panel);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.next(CardPanel);
    }//GEN-LAST:event_vBtnActionPerformed

    private void btnSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSettingActionPerformed
        // TODO add your handling code here:
        SettingPanel panel = new SettingPanel(CardPanel,start);
        CardPanel.add("StudentsListPanel", panel);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.next(CardPanel);
    }//GEN-LAST:event_btnSettingActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        leftPanel.removeAll();
        leftPanel.repaint();
        leftPanel.revalidate();
        leftPanel.add(Panel2);  
        leftPanel.repaint();
        leftPanel.revalidate();
        
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                try {
                    new Main().setVisible(true);
                } catch (Exception ex) {
                    Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CardPanel;
    private javax.swing.JPanel Panel1;
    private javax.swing.JPanel Panel2;
    private javax.swing.JButton aBtn;
    private javax.swing.JButton btnSetting;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel image;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JButton mBtn;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton sBtn;
    private javax.swing.JButton vBtn;
    // End of variables declaration//GEN-END:variables
}
