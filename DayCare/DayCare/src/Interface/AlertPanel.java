/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.ServicePackage.Immune;
import Business.PersonPackage.Student;
import Business.PersonPackage.StudentDirectory;
import Business.ServicePackage.DayCompare;
import Business.ServicePackage.DayCompare2;
import Business.ServicePackage.FirstNameCompare;
import Business.ServicePackage.LastNameCompare;
import java.awt.CardLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author tusiyu
 */
public class AlertPanel extends javax.swing.JPanel implements ActionListener{

    /**
     * Creates new form AlertPanel
     */
    private ArrayList<Student> stuDir;
    private JPanel CardPanel;
    private String type;
    private Date now;
    private int flag=0;
    private int flag_temp=0;
    private ArrayList<Object[]> temp;
    public AlertPanel(JPanel CardPanel,String type,ArrayList<Student> stuDir,Date now) {
        this.CardPanel = CardPanel;
        this.type = type;
        this.stuDir =stuDir;
        this.now = now;
        flag =1;
        
        initComponents();
        ActionEvent e;
          
        combsort.addActionListener(this);
        populateTable(type);
       
    }
      public void actionPerformed(ActionEvent e) {
                if("First Name".equals(combsort.getSelectedItem()))
                {
                    Collections.sort(stuDir,new FirstNameCompare());
                }
                  if("Last Name".equals(combsort.getSelectedItem()))
                {
                    Collections.sort(stuDir,new LastNameCompare());
                }
                    if(flag==1)
                    {
                         if("Left Days".equals(combsort.getSelectedItem()))
                        {
                   
                        Collections.sort(stuDir,new DayCompare(now,type));
                       
                        }
                         populateTable(type);
                    }
                    if(flag==0)
                    {
                        
                        if("Left Days".equals(combsort.getSelectedItem()))
                        {
                            Collections.sort(temp,new DayCompare2());
                            DefaultTableModel dtm = (DefaultTableModel)tblAlert.getModel();
                             dtm.setRowCount(0);
                               for(Object[] obj:temp)
                               {
                                    dtm.addRow(obj);
                               }     
                        }
                        else
                            populateTable();
                            
                    }
                  

                   


            }
    public void populateTable(String type){
    DefaultTableModel dtm = (DefaultTableModel)tblAlert.getModel();
    dtm.setRowCount(0);
    
    for(Student stu:stuDir)
    {
            Object[] row =  new  Object[5];
            row[0]= stu.getFirstname();
            row[1] = stu.getLastname();
            row[2]= stu.getId();
            row[3]= type;
            row[4]= stu.getImuDir().getSpecifiedType(type).getLeftdays(now);
            dtm.addRow(row);
    }
}
    public AlertPanel(JPanel CardPanel,ArrayList<Student> stuDir,Date now) {
         this.CardPanel = CardPanel;
         this.stuDir = stuDir;
        this.now = now;
        temp =new ArrayList<Object[]> ();
        initComponents();
        populateTable();
        combsort.addActionListener(this);
       
        
    }
      public void populateTable( ){
    DefaultTableModel dtm = (DefaultTableModel)tblAlert.getModel();
    dtm.setRowCount(0);
    for(Student stu:stuDir)
    {
        for(Immune imm:stu.getImuDir().getImmuDir())
        {
            if(imm.getFlag()==1)
            {
                Object[] row =  new  Object[5];
                row[0]= stu.getFirstname();
                row[1] = stu.getLastname();
                row[2]= stu.getId();
                row[3]= imm.getName();
                row[4]= imm.getLeftdays(now);
                dtm.addRow(row);
                if(flag_temp==0)
                {
                temp.add(row);
                }
            }
        }      
    }
    flag_temp=1;
}
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlert = new javax.swing.JTable();
        bBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        combsort = new javax.swing.JComboBox<String>();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 24)); // NOI18N
        jLabel1.setText("Students will be immunilized soon");

        tblAlert.setBackground(new java.awt.Color(255, 255, 153));
        tblAlert.setBorder(new javax.swing.border.MatteBorder(null));
        tblAlert.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "FirstName", "LastName", "Student ID", "Immunization Type", "Day left"
            }
        ));
        jScrollPane1.setViewportView(tblAlert);

        bBtn.setText("Back");
        bBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Sort by");

        combsort.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Disabled", "First Name", "Last Name", "Left Days" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 455, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(combsort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(418, 418, 418)
                                .addComponent(bBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(62, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bBtn)
                    .addComponent(jLabel2)
                    .addComponent(combsort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(69, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBtnActionPerformed
        // TODO add your handling code here:
        CardPanel.remove(this);
        CardLayout layout = (CardLayout) CardPanel.getLayout();
        layout.previous(CardPanel);
    }//GEN-LAST:event_bBtnActionPerformed
    public void daysort()
    {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBtn;
    private javax.swing.JComboBox<String> combsort;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAlert;
    // End of variables declaration//GEN-END:variables
}
